explain your skills and qualifications in two minutes (your elevator pitch)

things to bring to an interview
  printed resumes
  copy of the job description
  printed list of references
  small snack

make list of common interview questions by language



****************************************************************************************************
San Francisco
****************************************************************************************************

M  T  W  Th F  Sa Su
   23 22 21 20 19 18
17 16 15 14 13 12 11
10 9  8  7  6  5  4
3  2  1

15
  hacker rank problem
  fix local images
    fix errors
    error handling
    specify image count
    deploy
    styling
    specify image tightness



****************************************************************************************************
meetup template
****************************************************************************************************

**Please read and agree with the group rules before attending this Meetup

https://goo.gl/VAq3WM



Part 1

4:00 - 6:00

Open algorithm practice for coding interviews

todays topic: Big O notation

Location: 222 Second Street (LinkedIn building public space)



Part 2

6:00 - 7:00

Job hunt support group

Location: The Roastery, 199 New Montgomery ( 2 min walk )

------------------------------------------------------------------------------------------------------

Part1 

Code with a partner or small group using a pen and notebook or computer.

Practice solving the problems just as you would in an interview.

Example problems can be found at the following sites

https://www.interviewcake.com/

www.exercism.io/languages

https://www.codewars.com

We will be focusing on the concept of Big O notation for this study session

Try to familiarize yourself with the concepts of time and space complexity so that you can be prepared to explain your approach for solving a problem in an interview.

Big O notation introductions can be found at the following

https://www.rithmschool.com/courses/javascript-computer-science-fundamentals/introduction-to-big-o-notation

or you can search 


Udacity introduction to time an efficiency

for a section on this topic from Udacity's technical interview course

Don't worry if the concept is not clear to you we will be teaching and learning together

You can also use this time to practice questions and answers from the interview list https://goo.gl/sh5km2

---------------------------------------------------------------------------------------------------

Part2 

Close our computers and heading around the corner to The Roastery 

Free talk about your recent experiences or strategies during the job search

How are you studying for the tech interview     

What is your strategy for reaching out to companies     

Talk about your recent successes or failures

Mingle and network with others


You can also use this time to practice questions and answers from the interview list https://goo.gl/sh5km2



****************************************************************************************************
in Nebraska
****************************************************************************************************

Learn
  React
  Fill in holes of node app and work on portfolio

Resume
  Re-format resume to fit on one page

Print
  coppies of resume for job interviews on nice paper
  business cards

Tech Interview Prep
  Cram for interviews or enroll in bootcamp
    udacity
    rithym
    cracking the technical interview book


****************************************************************************************************
Korea
****************************************************************************************************


13 12 11 10 9 8 7 6 5 4  3 2 1 
T  W  TH F  S S M T W TH F S S


7 M
  morning 
    resume
  
  afternoon
    portfolio site
      ---
      fix all div margins to be uniform
      ---
    clean social footprint

  evening
    d3

6 T
  portfolio

5 W
  portfolio
    pick projects, get screenshots, or heroku links, but don't write code 

4 Th
  portfolio
  resume


****************************************************************************************************

  Keep track of your study time and share your progress and learning materials with others.

  node.js
  authentication
  automated testing

  Instructions

  // create dummy data
  npm run seed

  // run dev environment
  npm run dev

  // testing, linting and security
  npm run test
  npm run test-watch

  npm run lint
  npm run lint-watch

  npm run security-check

  Areas for improvment
  Create user and administrator modes of authentication
  Need to revisit the model associations between users and slips. Object reference vs embedded reference.
  Rewrite the routes to act as a cleaner rest API serving json with ajax calls and fewer page redirects.
  Implement feature allowing users to re-use previous slips and keep track of time on the site instead of just submitting time.
  Model password not validating after implementing authentication

  https://tstory.herokuapp.com/

  ***

  gaby testing
    Jade/Pug automated testing
    This app is not fully built out but I use the link(testing setup) and link(models) as a reference for building other projects.

  ***

  vim speed master
    javaScript, jQuery
  Game that requires you to use vim combinations to move and match a cursor on the screen. 
  The faster you move the more points you get.

  Instructions
  Move the purple curssor onto the white boxes.
  Each time there is a collision new boxes will apear.
  Higher points and bonus seconds are rewared for faster collisions so using vim combinations is key.

  vim primer

  move cursor

  j down
  k up
  l left
  h right

  combinations

  11j moves down 11 times
  28k moves up 28 times

  if you just want to practice number combos you can also use the arrow keys

  11-> moves right 11 times
  12<- moves left 12 times

  needs to be done
  Explore functional programming concepts while rewriting this code
  separate code into modules

  Code challenge winner for rails app submission 2016.

  blog
  http://www.mashrurhossain.com/blog/january-code-challenge-winner-nate-lipp

  app
  https://share-my-repo.herokuapp.com/

  repo
  https://github.com/Nalipp/Share-my-code

    


**********
      tStory

        go through the routes but
        Readme with pictures and link
        DON'T code too much!!!!!

          
      (later)
        js_dev_environment?
        ltc class checking
        simple rxjs project
        d3 code clean project
        core based statistical area
          Sinatra web app using postgre as a backend. 
          Sortable US government data acording to population size, density, race, and age.
          Warning this app was created before learned responsive web design.

  resume
  update linkedin portfolio!

*******************************************************************************************
**important
*******************************************************************************************

  get portfolio and linkedin first draft done by end of the week so you can mark your location

  add link to linkedin for the hacker competition

  start looking at meetup pages

  organize code files and clean computer (airplane)
  code challenges (airplane)
    download cheatsheets and exercism.io ? 

  finish udacity course and schedule interview practice everyday (san francisco)
    practice a few questions (launch scool) for ruby
      https://www.pramp.com/dashboard#/



13 T
  morning
    start udemy getting a job course
      learn python in y minutes

  afternoon
    portfolio site
      make list of needs
      write blog post of becomming a developer (1st draft don't finish it all the way)
      make one push request on project

  evening
    research
      answer job prep concepts
      interview cake
      socket.io
      how to get a job
      education companies
      free code camp publishing
      are job interviews conducted in multiple langauges?
    d3

12 W
  morning 
    udemy getting a job course
      learn ruby in y minutes
      review python classes

  afternoon
    portfolio
      go through job_prep.txt portfolio secstion and finish as much as possible
      make at least one commit to portfolio site

11 TH
  morning
    portfolio

  afternoon 
    udemy getting a job course
      learn javascript in y minutes

  evening
    d3


*******************************************************************************************
weekly log aug 8th - aug 31st
*******************************************************************************************
170 hours

learn
  pluralsight
  udemy

build
  ltc
  time-keep

teach
  html css portfolio deployment


skills needed to build ltc and time-keep
spa, socket.io, authentication, development environment

  express generator
  app skeleton including tests
  create development environemnt (webpack example app)
  create models
    tests
  create routing
    tests
  clean up data / seed file
  design (indlucing d3 library)
  

  
*******************************************************************************************

  < aug 22nd
    udemy       -> ltc
    pluarlsight -> time-keep
    build       -> portfolio

    javascript promises: https://classroom.udacity.com/courses/ud898/lessons/5972243496/concepts/60754214980923
    

  > aug 23rd 
    job study   -> job interview, launch school, udacity, udemy git a job
    job hunt    -> resume, portfolio


*******************************************************************************************

-----------learn build < aug 23rd-----------------------
week 1
  tue  aug 8
         build -> ltc authentication
                  don't worry about the deployment error, get development working
         udemy
  wed  aug 9
         udemy
  thur aug 10
         udemy
  fri  aug 11
         prepare portfolio class
         udemy
  sat  aug 12
         pluralsight advanced mongo
  sun  aug 13


week 2
  today mon  aug 14th
         udemy (authentication)
         find accomidation and airfare
           hacker houses
           airbnb
         decide about meetup
  tue
         udemy (authentication / socket.io)
         pluralsight (es6?)
  wed
         udemy (socket.io)
  thur
         build time-keep / teacher repos
  fri
         build time-keep / teacher repos
  sat
         build time-keep / teachers repos
  sun

week 3
  mon
         build
  tue
         build
  wed
         build
-----------job study > aug 23rd-----------------------







x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x

*******************************************************************************************
weekly log aug 1st - oct 1st
*******************************************************************************************

*******************************************************************************************
*two month outline

  5 weeks 

    pluralsight subscription (aug 16)
      *sass
      *webpack
      *mongoose
      *javaScript track
      advanced

    udemy 
      andrew meed
      git developer job
      javascript es6

    launch school 
      jquery

    build (implement authentication, webpack, scss, spa, socketio, caching?)
      ltc
      Gaby
      timekeep?


  3 weeks

    job research
    interview prep
      ydkjs
      udacity
      launch school review
    
    build 
      portfolio
        publish notes into blog series
        portfolio has link to each technology
          *technologies
      basic node.js app outline
      timekeep?


*******************************************************************************************
*weekly outline

  week1 -> authentication for 
           build: ltc, jquery class teach
             thrus:  ltc local authentication
                     ltc prepare for class (practice 1)
             friday: ltc oauth authentication -> https://scotch.io/tutorials/easy-node-authentication-facebook
                     ltc reset password -> http://sahatyalkabov.com/how-to-implement-password-reset-in-nodejs/
                     ltc prepare for class (practice 2)
  week2 -> pluralsight, webpack
           build: ltc, webpack, flash messages 
  week3 -> pluralsight, udemy
           build: ltc, gaby
  week4 -> udemy, build
  week5 -> udemy, jQuery, 
           build: time-keep (use sahat/hackathon-starter)
  week6 -> 3 weeks
  week7 -> 3 weeks
  week8 -> 3 weeks


*******************************************************************************************
*technologies
  linked to example page of code
  linked to exmample project blog series in its entirety

  starter app (portfolio) (master app)
    authentication (master app and teacher app) *already started
    config (master app and teacher app)
    heroku (master app)
    webpack (portfolio) (master app)
    testing (portfolio) (master app and teacher app)
      models
      routes
    socket.io (master app? and teacher app)
    hidding env secrets (master app and teacher app)
    model associations (master app and teacher app)


****************************************************************************************************
meetup curiculum


Rithm School Computer Science Fundamentals with JavaScript. (javaScript)
1. Introductions talking about the interview process
      What to expect in the interview process
      Sharing stury resources

2. Introduction to Big O Notation. 
      Understanding time and space complexity

      https://www.interviewcake.com/article/java/big-o-notation-time-and-space-complexity
      http://bigocheatsheet.com/

      Rithm School free coursework
        https://www.rithmschool.com/courses/javascript-computer-science-fundamentals/introduction-to-big-o-notation
          practice exercises
            https://github.com/rithmschool/javascript_computer_science_exercises/tree/master/big_o_exercise
          solutions
            https://github.com/rithmschool/javascript_computer_science_exercises/tree/solutions/big_o_exercise

3. Introduction to Recursion.
     Creating a base case, and preventing stack overflow

      Rithm School free coursework
        https://www.rithmschool.com/courses/javascript-computer-science-fundamentals/introduction-to-recursion
          practice exercises
            https://github.com/rithmschool/javascript_computer_science_exercises/tree/master/recursion_exercise
          solutions
            https://github.com/rithmschool/javascript_computer_science_exercises/tree/solutions/recursion_exercise


4. Searching Algorithms binary search
      linearSearch, linearSearchRecursive, binarySearch, binarySearchRecursive

      Rithm School free coursework
        https://www.rithmschool.com/courses/javascript-computer-science-fundamentals/searching-algorithms
          practice exercises
            https://github.com/rithmschool/javascript_computer_science_exercises/tree/master/searching_algorithms_exercise
          solutions
            https://github.com/rithmschool/javascript_computer_science_exercises/tree/solutions/searching_algorithms_exercise


5. Basic sorting algorithms
     Bubble Sort, Insertion Sort, Selection Sort

      Rithm School free coursework
        practice exercises
          https://github.com/rithmschool/javascript_computer_science_exercises/tree/master/sorting_algorithms_exercise
        solutions
          https://github.com/rithmschool/javascript_computer_science_exercises/tree/solutions/sorting_algorithms_exercise

---------------------

Thur Oct 5th
6. Intermediate Sorting Algorithms.
Six blocks off Montgomery BART
    Merge Sort, Quick Sort
We try to practice using paper and pencil similar to interview white boarding. Try to bring some paper and a pencil and extra to share if others forget.

    practice exercises
      https://github.com/rithmschool/javascript_computer_science_exercises/tree/master/sorting_algorithms_exercise
    solutions
      https://github.com/rithmschool/javascript_computer_science_exercises/tree/solutions/sorting_algorithms_exercise

Mon Oct 9th
7. Arrays and linked lists
Six blocks off Montgomery BART

    Implement push, pop, unshift, shift, reverse using a singly linked list
We try to practice using paper and pencil similar to interview white boarding. Try to bring some paper and a pencil and extra to share if others forget.
    Rithm school free curiculum
      https://www.rithmschool.com/courses/javascript-computer-science-fundamentals/arrays-revisited
      https://www.rithmschool.com/courses/javascript-computer-science-fundamentals/singly-linked-lists
        practice exercises
          https://github.com/rithmschool/javascript_computer_science_exercises/tree/master/singly_linked_lists_exercise
        solutions
          https://github.com/rithmschool/javascript_computer_science_exercises/tree/solutions/singly_linked_lists_exercise

Thur Oct 12th
8. Dynamic programming 
Six blocks off Montgomery BART
    Memoization and Tabulation
We try to practice using paper and pencil similar to interview white boarding. Try to bring some paper and a pencil and extra to share if others forget.
      Rithm School free coursework
        https://www.rithmschool.com/courses/javascript-computer-science-fundamentals/dynamic-programming

Mon Oct 16th
9. Doubly Linked Lists. 
Six blocks off Montgomery BART
    Implement push, pop, unshift, shift, reverse using a doubly linked list
We try to practice using paper and pencil similar to interview white boarding. Try to bring some paper and a pencil and extra to share if others forget.
      Rithm School free coursework
        https://www.rithmschool.com/courses/javascript-computer-science-fundamentals/doubly-linked-lists
        practice exercises
          https://github.com/rithmschool/javascript_computer_science_exercises/tree/master/doubly_linked_lists_exercise
        solutions
          https://github.com/rithmschool/javascript_computer_science_exercises/tree/solutions/doubly_linked_lists_exercise

Thur Oct 19th
10. Introduction to Stacks. 
We try to practice using paper and pencil similar to interview white boarding. Try to bring some paper and a pencil and extra to share if others forget.
Six blocks off Montgomery BART

      Rithm School free coursework
        https://www.rithmschool.com/courses/javascript-computer-science-fundamentals/introduction-to-stacks
          practice exercises
            https://github.com/rithmschool/javascript_computer_science_exercises/tree/master/stacks_exercise
          solutions
            https://github.com/rithmschool/javascript_computer_science_exercises/tree/solutions/stacks_exercise


Mon Oct 23rd
11. Introduction to Queues. 
We try to practice using paper and pencil similar to interview white boarding. Try to bring some paper and a pencil and extra to share if others forget.
Six blocks off Montgomery BART
      Rithm School free coursework
        https://www.rithmschool.com/courses/javascript-computer-science-fundamentals/introduction-to-queues
          practice exercises
            https://github.com/rithmschool/javascript_computer_science_exercises/tree/master/queues_exercise
          solutions
            https://github.com/rithmschool/javascript_computer_science_exercises/tree/solutions/queues_exercise


Thur Oct 26th
12. Introduction to Binary Search Trees. 
We try to practice using paper and pencil similar to interview white boarding. Try to bring some paper and a pencil and extra to share if others forget.
Six blocks off Montgomery BART
      Rithm School free coursework
        https://www.rithmschool.com/courses/javascript-computer-science-fundamentals/introduction-to-binary-search-trees
          practice exercises
            https://github.com/rithmschool/javascript_computer_science_exercises/tree/master/binary_search_trees_exercise
          solutions
            https://github.com/rithmschool/javascript_computer_science_exercises/tree/solutions/binary_search_trees_exercise


Mon Oct 30th
13. Binary Search Trees - Traversal.
We try to practice using paper and pencil similar to interview white boarding. Try to bring some paper and a pencil and extra to share if others forget.
Six blocks off Montgomery BART
      Rithm School free coursework
        https://www.rithmschool.com/courses/javascript-computer-science-fundamentals/binary-search-trees-traversal
          practice exercises
            https://github.com/rithmschool/javascript_computer_science_exercises/tree/master/binary_search_trees_exercise
          solutions
            https://github.com/rithmschool/javascript_computer_science_exercises/tree/solutions/binary_search_trees_exercise


Thur Nov 2nd
14. Binary Search Trees - Removal.
We try to practice using paper and pencil similar to interview white boarding. Try to bring some paper and a pencil and extra to share if others forget.
Six blocks off Montgomery BART
      Rithm School free coursework
        https://www.rithmschool.com/courses/javascript-computer-science-fundamentals/binary-search-trees-removal
          practice exercises
            https://www.rithmschool.com/courses/javascript-computer-science-fundamentals/binary-search-trees-exercises

Mon Nov 6th
15. Binary Heaps.
We try to practice using paper and pencil similar to interview white boarding. Try to bring some paper and a pencil and extra to share if others forget.
Six blocks off Montgomery BART
      Rithm School free coursework
        https://www.rithmschool.com/courses/javascript-computer-science-fundamentals/binary-heaps-introduction
          practice exercises
            https://github.com/rithmschool/javascript_computer_science_exercises/tree/master/binary_heaps_exercise
          solutions
            https://github.com/rithmschool/javascript_computer_science_exercises/tree/solutions/binary_heaps_exercise



Our meetups will be folowing the outline of Rithm Schools free coursework, the primary langauge for instruction for this course is javaScript but the concepts can be implemented in any langauge of your choice during the meetup

  Additional resources
    cracking the coding interview 6th eddition (java)

    udacity Technical Interview (python)
    https://www.udacity.com/course/technical-interview--ud513


  A quick shoutout to Rithm for creating such great free resources

    Rithm School Computer Science Fundamentals with JavaScript.
    https://www.rithmschool.com/courses/javascript-computer-science-fundamentals

    Paid bootcamp
    https://www.rithmschool.com/

    Free night classes that can be found on meetup group name Code Your Face Off
    https://www.meetup.com/preview/meetup-code-your-face-off

    There is also a very affordable udemy course that is taught by some of the instructors from Rithm
    https://www.udemy.com/the-advanced-web-developer-bootcamp/
